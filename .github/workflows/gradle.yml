name: Java CI with Gradle

on:
  push:
    branches: [ "cicd" ]

env:
  PROJECT_NAME: keyDeuk-shop
  BUCKET_NAME: keydeck-be-cicd-bucket
  CODE_DEPLOY_APP_NAME: keydeuk_be_cicd
  DEPLOYMENT_GROUP_NAME: keydeuk_be_instance

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    #(1)
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    #
    - name: Modify application.yml
      run: |
        sed -i "s|spring.profiles.active=local|spring.profiles.active=dev|" ./src/main/resources/application.yml

    #(4)
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
#       uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#       with:
#         arguments: build
      run: ./gradlew clean build --exclude-task test

    # (8) 압축 파일 형태로 전달
    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash
      
    # (9) AWS 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    # (10) S3 bucket으로 copy
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
    
    # (11) EC2 배포
    - name: Code Deploy To EC2 instance
      run: aws deploy create-deployment 
                --application-name ${{env.CODE_DEPLOY_APP_NAME}} 
                --deployment-config-name CodeDeployDefault.AllAtOnce 
                --deployment-group-name ${{env.DEPLOYMENT_GROUP_NAME}}  
                --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip

